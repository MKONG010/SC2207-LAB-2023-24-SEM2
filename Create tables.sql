\-- USER Table
CREATE TABLE USER_ACCOUNT (
    Phone_Number VARCHAR(20) PRIMARY KEY,
    Name VARCHAR(255) NULL,
    DOB DATE NULL,
    Gender VARCHAR(1) NULL
);

-- USER_RELATIONSHIP Table
CREATE TABLE USER_RELATIONSHIP (
    Person1_Phone_Number VARCHAR(20),
    Person2_Phone_Number VARCHAR(20),
    Type_of_Relationship VARCHAR(50),
    PRIMARY KEY (Person1_Phone_Number, Person2_Phone_Number),
    FOREIGN KEY (Person1_Phone_Number) REFERENCES USER_ACCOUNT(Phone_Number),
    FOREIGN KEY (Person2_Phone_Number) REFERENCES USER_ACCOUNT(Phone_Number)
);

-- CHATGPT_PROMPTS Table
CREATE TABLE CHATGPT_PROMPTS (
    PID INT PRIMARY KEY,
    Date_Time DATETIME,
    Text TEXT,
    Response TEXT,
    Language VARCHAR(50),
    Phone_Number VARCHAR(20),
    FOREIGN KEY (Phone_Number) REFERENCES USER_ACCOUNT(Phone_Number)
);

-- COMPLAINT Table
CREATE TABLE COMPLAINT (
    COMPLAINT_ID INT PRIMARY KEY,
    Status VARCHAR(50),
    Filed_Date_Time DATETIME,
    Text TEXT,
    Phone_Number VARCHAR(20),
    FOREIGN KEY (Phone_Number) REFERENCES USER_ACCOUNT(Phone_Number)
);

-- RESTAURANT_CHAIN Table
CREATE TABLE RESTAURANT_CHAIN (
    RID INT PRIMARY KEY,
    Address VARCHAR(255)
);

-- MALL_MGMT_COMPANY Table
CREATE TABLE MALL_MGMT_COMPANY (
    CID INT PRIMARY KEY,
    Address VARCHAR(255)
);

-- MALL Table
CREATE TABLE MALL (
    MID INT PRIMARY KEY,
    CID INT,
    Address VARCHAR(255),
    NumShops INT,
    FOREIGN KEY (CID) REFERENCES MALL_MGMT_COMPANY(CID)
   
);

CREATE TABLE RESTAURANT_OUTLET (
  OID INT PRIMARY KEY,
  RID INT,
  MID INT
  FOREIGN KEY (RID) REFERENCES RESTAURANT_CHAIN(RID),
  FOREIGN KEY (MID) REFERENCES MALL(MID)
);

-- COMPLAINTS_ON_RESTAURANT Table
CREATE TABLE COMPLAINTS_ON_RESTAURANT (
    COMPLAINT_ID INT PRIMARY KEY,
    OID INT,
    FOREIGN KEY (COMPLAINT_ID) REFERENCES COMPLAINT(COMPLAINT_ID),
	FOREIGN KEY (OID) REFERENCES RESTAURANT_OUTLET(OID)
);

-- SHOP Table
CREATE TABLE SHOP (
    SID INT PRIMARY KEY,
    MID INT,
    Type VARCHAR(50)
    FOREIGN KEY(MID) REFERENCES MALL(MID)
    -- Assuming a MALL table exists for FOREIGN KEY (MID)
);

-- COMPLAINTS_ON_SHOP Table
CREATE TABLE COMPLAINTS_ON_SHOP (
    COMPLAINT_ID INT PRIMARY KEY,
    SID INT,
    FOREIGN KEY (COMPLAINT_ID) REFERENCES COMPLAINT(COMPLAINT_ID),
    FOREIGN KEY (SID) REFERENCES SHOP(SID) 
);

-- DINE_RECORD Table
CREATE TABLE DINE_RECORD (
    Phone_Number VARCHAR(20),
    Date_time_in DATETIME,
    OID INT,
    Amount_spent DECIMAL(10,2),
    Date_time_out DATETIME,
    PRIMARY KEY (Phone_Number, Date_time_in, OID),
    FOREIGN KEY (Phone_Number) REFERENCES USER_ACCOUNT(Phone_Number),
    FOREIGN KEY (OID) REFERENCES RESTAURANT_OUTLET(OID)
    -- Assuming a RESTAURANT_OUTLET table exists for FOREIGN KEY (OID)
);

-- SHOP_RECORD Table
CREATE TABLE SHOP_RECORD (
    Phone_Number VARCHAR(20),
    Date_time_in DATETIME,
    SID INT,
    Amount_spent DECIMAL(10,2),
    Date_time_out DATETIME,
    PRIMARY KEY (Phone_Number, Date_time_in, SID),
    FOREIGN KEY (Phone_Number) REFERENCES USER_ACCOUNT(Phone_Number),
    FOREIGN KEY (SID) REFERENCES SHOP(SID)
    -- Assuming a SHOP table exists for FOREIGN KEY (SID)
);

-- VOUCHER Table
CREATE TABLE VOUCHER (
    VID INT PRIMARY KEY,
    Status VARCHAR(50),
    Description TEXT,
    Date_Issued DATE,
    Expiry_Date DATE
);

-- PURCHASE_VOUCHER Table
CREATE TABLE PURCHASE_VOUCHER (
    VID INT PRIMARY KEY,
    Purchase_Discount DECIMAL(5,2),
    Phone_Number VARCHAR(20),
    Date_Time DATETIME,
    FOREIGN KEY (VID) REFERENCES VOUCHER(VID),
    FOREIGN KEY (Phone_Number) REFERENCES USER_ACCOUNT(Phone_Number)
);

-- DINE_VOUCHER Table
CREATE TABLE DINE_VOUCHER (
    VID INT PRIMARY KEY,
    Cash_discount DECIMAL(5,2),
    Phone_Number VARCHAR(20),
    Date_Time DATETIME,
    FOREIGN KEY (VID) REFERENCES VOUCHER(VID),
    FOREIGN KEY (Phone_Number) REFERENCES USER_ACCOUNT(Phone_Number)
);

-- GROUP_VOUCHER Table
CREATE TABLE GROUP_VOUCHER (
    VID INT PRIMARY KEY,
    Group_discount DECIMAL(5,2),
    Group_size INT,
    Phone_Number VARCHAR(20),
    Date_Time DATETIME,
    FOREIGN KEY (VID) REFERENCES VOUCHER(VID),
    FOREIGN KEY (Phone_Number) REFERENCES USER_ACCOUNT(Phone_Number)
);

-- PACKAGE_VOUCHER Table
CREATE TABLE PACKAGE_VOUCHER (
    VID INT PRIMARY KEY,
    Package_discount DECIMAL(5,2),
    FOREIGN KEY (VID) REFERENCES VOUCHER(VID)
);

CREATE TABLE DAY_PACKAGE (
  DID INT PRIMARY KEY,
  Description TEXT,
  Phone_Number VARCHAR(20),
  VID INT,
 FOREIGN KEY (Phone_Number) REFERENCES USER_ACCOUNT(Phone_Number),
 FOREIGN KEY (VID) REFERENCES PACKAGE_VOUCHER(VID)
);

-- RESTAURANT-OUTLET_HAS_DAYPACKAGE
CREATE TABLE RESTAURANT_OUTLET_HAS_DAYPACKAGE(
    OID INT,
    DID INT,
    PRIMARY KEY (OID,DID),
    FOREIGN KEY (OID) REFERENCES RESTAURANT_OUTLET(OID),
    FOREIGN KEY (DID) REFERENCES DAY_PACKAGE(DID)
);

-- DAYPACKAGE_CONTAINS_MALL
CREATE TABLE DAYPACKAGE_CONTAINS_MALL(
    DID INT,
    MID INT,
    PRIMARY KEY (DID,MID),
    FOREIGN KEY (MID) REFERENCES MALL(MID),
    FOREIGN KEY (DID) REFERENCES DAY_PACKAGE(DID)
);

CREATE TABLE RECOMMENDATION1 (
  NID INT,
  Valid_Period INT,
  Date_Issued DATETIME,
  VID INT,
  DID INT,
  OID INT,
  PRIMARY KEY (NID),
  FOREIGN KEY (VID) REFERENCES VOUCHER(VID),
  FOREIGN KEY (DID) REFERENCES DAY_PACKAGE(DID),
  FOREIGN KEY (OID) REFERENCES RESTAURANT_OUTLET(OID)
);

-- RECOMMENDATION_NOTIFIES_USER
CREATE TABLE RECOMMENDATION_NOTIFIES_USER(
    Phone_Number VARCHAR(20), 
    NID INT
    PRIMARY KEY (Phone_Number, NID),
    FOREIGN KEY (Phone_Number) REFERENCES USER_ACCOUNT(Phone_Number),
    FOREIGN KEY (NID) REFERENCES RECOMMENDATION1(NID)
);
